# This file is used to specify the tests used by the validate_bom.sh script.
# See validate_bom__test.py for more info.

aliases:
  standard_google_provider_params:
    google_primary_managed_project_id: $google_account_project
    spinnaker_google_account: $google_account_name
    gce_credentials_path: $google_account_credentials

  standard_appengine_provider_params:
    spinnaker_appengine_account: $appengine_account_name
    appengine_credentials_path: $appengine_account_credentials
    appengine_primary_managed_project_id: $appengine_account_project

  standard_aws_provider_params:
    spinnaker_aws_account: $aws_account_name
    aws_profile: citest
    test_aws_security_group_id: $VALIDATE_AWS_SECURITY_GROUP

  standard_azure_provider_params:
    spinnaker_azure_account: $azure_account_name
    aws_profile: citest

  standard_dcos_provider_params:
    spinnaker_dcos_account: $dcos_account_name
    spinnaker_dcos_cluster: $dcos_cluster_name

tests:
  bake_and_deploy_test:
    requires:
      configuration:
        google_account_enabled: true
        jenkins_master_enabled: true
      services: [clouddriver, echo, front50, gate, igor, orca, rosco]
    quota:
      google_cpu: 1
      google_forwarding_rules: 1
    api: gate
    args:
      alias: [standard_google_provider_params]
      test_google:
      jenkins_token: TRIGGER_TOKEN
      jenkins_job: NoOpTrigger
      jenkins_url: $jenkins_master_address
      jenkins_master: $jenkins_master_name
      jenkins_master_user: $jenkins_master_user

  google_front50_test:
    requires:
      configuration:
        spinnaker_storage: gcs

        # NOTE (20170622):
        # Localdebian because for some reason kubectl doesnt work
        # the port forwarding into front50 will often be reset by peer
        # I think this is a k8s issue but cant figure it out.
        #
        # It is only for front50, only with kubernetes, and very consistent,
        # though doesnt seem to happen in fresh clusters. Internal pods
        # are fine (other services use front50 without incident).
        #
        # I'm disabling this test in k8s for now. It shouldnt be sensitive to
        # the deployment environment so gce deployments are sufficient to confirm
        # front50 working correctly (and other k8s tests use it indirectly).
        deploy_spinnaker_type: localdebian

      services: [front50]
    api: front50
    args:
      alias: [standard_google_provider_params]
      gcs_bucket: $storage_gcs_bucket
      gcs_json_path: $storage_gcs_credentials
      gcs_base_path: front50

  google_kato_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver]
    api: clouddriver
    quota:
      google_cpu: 1
      google_backend_services: 1
      google_forwarding_rules: 2
    args:
      alias: [standard_google_provider_params]

  google_zonal_server_group_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      google_cpu: 3
      google_forwarding_rules: 1
    path: citest/tests/google_server_group_test.py
    api: gate
    args:
      alias: [standard_google_provider_params]

  google_regional_server_group_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      google_cpu: 3
      google_forwarding_rules: 1
    path: citest/tests/google_server_group_test.py
    api: gate
    args:
      alias: [standard_google_provider_params]
      regional:

  google_smoke_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      google_cpu: 2
      google_forwarding_rules: 1
    api: gate
    args:
      alias: [standard_google_provider_params]

  google_http_lb_upsert_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      google_backend_services: 3
      google_cpu: 2
      google_ssl_certificates: 2
    api: gate
    args:
      alias: [standard_google_provider_params]

  google_http_lb_upsert_server_test:
    requires:
      configuration:
        google_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      google_backend_services: 3
      google_cpu: 2
      google_ssl_certificates: 2
    api: gate
    args:
      alias: [standard_google_provider_params]

  kube_smoke_test:
    requires:
      configuration:
        k8s_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    api: gate
    args:
      spinnaker_kubernetes_account: $k8s_account_name
      test_namespace: $k8s_account_namespaces

  aws_kato_test:
    requires:
      configuration:
        aws_account_enabled: true
      services: [clouddriver]
    api: clouddriver
    args:
      alias: [standard_aws_provider_params]

  aws_smoke_test:
    requires:
      configuration:
        aws_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    api: gate
    args:
      alias: [standard_aws_provider_params]

  azure_smoke_test:
    requires:
      configuration:
        azure_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    api: gate
    args:
      alias: [standard_azure_provider_params]

  appengine_smoke_test_git:
    requires:
      configuration:
        appengine_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      appengine_deployment: 1
    path: citest/tests/appengine_smoke_test.py
    api: gate
    args:
      alias: [standard_appengine_provider_params]
      git_repo_url: https://github.com/GoogleCloudPlatform/python-docs-samples.git
      app_directory_root: appengine/standard/hello_world
      branch: master

  appengine_smoke_test_gcs:
    requires:
      configuration:
        appengine_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    quota:
      appengine_deployment: 1
    path: citest/tests/appengine_smoke_test.py
    api: gate
    args:
      alias: [standard_appengine_provider_params]
      git_repo_url: https://github.com/GoogleCloudPlatform/python-docs-samples.git
      app_directory_root: appengine/standard/hello_world
      test_gcs_bucket: $storage_gcs_bucket
      branch: master


  dcos_smoke_test:
    requires:
      configuration:
        dcos_account_enabled: true
      services: [clouddriver, front50, gate, orca]
    path: citest/tests/dcos_smoke_test.py
    api: gate
    args:
      alias: [standard_dcos_provider_params]

# Add openstack_smoke_test
#    need to add config support first
